<?xml version="1.0" encoding="utf-8"?>

<!-- 选择器：当Button未被选中时，Button->Button_normal
             当Button未被点中后，Button->Button_pressed，以上这三个均在drawable中创建
     具体可参考：https://blog.csdn.net/lwzhang1101/article/details/89923405 -->

<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <!-- 触摸模式下单击后的背景图片-->
    <item android:drawable="@drawable/btn_buddhalaughs1" android:state_pressed="true" />
    <!-- 不能单击时的样式 -->
    <item android:drawable="@drawable/btn_buddhalaughs2" android:state_enabled="false" />
    <!-- 点击前的背景图片-->
    <item android:drawable="@drawable/btn_buddhalaughs0"/>
</selector>

    <!--
        补充信息：
        android:state_pressed 是否按下，如一个按钮触摸或者点击。
        android:state_focused 是否取得焦点，比如用户选择了一个文本框。
        android:state_hovered 光标是否悬停，通常与focused state相同，它是4.0的新特性
        android:state_selected 被选中，它与focus state并不完全一样，如一个list view 被选中的时候，它里面的各个子组件可能通过方向键，被选中了。
        android:state_checkable 组件是否能被check。如：RadioButton是可以被check的。
        android:state_checked 被checked了，如：一个RadioButton可以被check了。
        android:state_enabled 能够接受触摸或者点击事件
        android:state_activated 被激活(这个麻烦举个例子，不是特明白)
        android:state_window_focused 应用程序是否在前台，当有通知栏被拉下来或者一个对话框弹出的时候应用程序就不在前台了

        注意:如果有多个item，那么程序将自动从上到下进行匹配，最先匹配的将得到应用。（不是通过最佳匹配）
        如果一个item没有任何的状态说明，那么它将可以被任何一个状态匹配。-->